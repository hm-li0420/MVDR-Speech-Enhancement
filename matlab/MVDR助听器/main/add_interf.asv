function [y] = add_interf(x,cfg)
SIR = cfg.SIR;
c = cfg.c; fs = cfg.fs; room = cfg.room; T60 = cfg.T60;N
micCenter = cfg.micCenter; 
micCoordinate= cfg.micCoordinate;
micPose = micCoordinate + repmat(micCenter, Nch, 1);
beta = max(T60 * fs, 300);      % 混响点数
if SIR ~= inf
    azITF = cfg.azITF; elITF = cfg.elITF; distITF = cfg.distITF;
    interfPose = micCenter + distITF * [cos(elITF/180*pi)*cos(azITF/180*pi) cos(elITF/180*pi)*sin(azITF/180*pi) sin(elITF/180*pi)];
    
    rirITFSimu = rir_generator(c, fs, micPose, interfPose, room, T60, beta);
    interfFile = cfg.interfFile;
    interfSource = audioread([interfFile]);
    interfSource = interfSource(:,1);
    if size(interfSource,1) > size(source,1)
        fst = floor(rand * (size(interfSource,1) - size(source,1)));   %随机取两段话长度差的起点
        interfSource = interfSource(fst+1:fst+size(source,1));
    elseif size(interfSource,1) < size(source,1)
        interfSource = [interfSource;zeros(size(source,1)-size(interfSource,1),1)];
    end



interf = zeros(length(speech), Nch);
rirScale = 20;
for ch=1:Nch
    interf(:,ch) = rirScale * fftfilt(rirITFSimu(ch,:), interfSource);
end

interf = sqrt( sum(sum(source.^2)) / sum(sum(interf.^2))/(10^(SIR/10)) ) * interf;
y = y + interf;


end